#!/bin/bash
#==============================================================
# Function to load the python environment for the Isis package
#--------------------------------------------------------------
# AUTHOR: Miguel Ramos Pernas
# e-mail: miguel.ramos.pernas@cern.ch
#==============================================================

usage="
$(basename "$0") [-h] [-i] [-p pyflags]

This is a wrapper over the script < isispy.py >. Initialize a ipython session
with the provided options and the Isis project loaded. If ipython is not
available, python will be used instead.

 -h  show this help text
 -i  run in interactive mode (by default if no arguments are specified)
 -p  python flags
"


# In case an unknown option is given, it is considered as an option to < isispy.py >

pyflags=""
isflags=""
while getopts ':hip:' option; do
    case "$option" in
	h)
	    echo "$usage"
	    exit
	    ;;
	i)
	    pyflags="$pyflags -i"
	    ;;
	p)
	    pyflags="$pyflags $OPTARG"
	    ;;
	:)
	    printf "\nError: missing argument for < -%s >\n" "$OPTARG" >&2
	    echo "$usage" >&2
	    exit 1
	    ;;
	\?)
	    isflags="$isflags -$OPTARG"
	    ;;
    esac
done
shift $((OPTIND - 1))


# Check if all the arguments are data files. If no arguments are provided
# the output is also "y"

interactive=
for (( i=1; i <= $#; i++ )) {

	val="${!i}"

	if [ $val == *.py ]; then
	    interactive="n"
	    break
	fi
}

if [ "$interactive" != "n" ]; then
    pyflags=" -i $pyflags"
fi


# The script < isispy.py > is located at $ISIS_BIN

cmd="$ISIS_BIN/isispy.py $isflags $@"


# Checks whether any of ipython or python exists and initializes it with the
# Isis and Root modules. It will prioritize initializing ipython first. If none
# of them are accesible the process is aborted.

if   hash ipython 2>/dev/null; then
    ipython $pyflags --no-banner -c "%run $cmd"
elif hash python  2>/dev/null; then
    python  $pyflags $cmd
else
    echo "Error: No ipython nor python exist. Aborted."
fi
